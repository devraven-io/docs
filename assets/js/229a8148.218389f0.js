"use strict";(self.webpackChunkdevraven_docs=self.webpackChunkdevraven_docs||[]).push([[4457],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return v}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),v=a,m=c["".concat(i,".").concat(v)]||c[v]||d[v]||s;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function v(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=c;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<s;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},7075:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return i},default:function(){return v},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return d}});var r=n(7462),a=n(3366),s=(n(7294),n(3905)),o=["components"],l={sidebar_position:11},i="Available APIs",p={unversionedId:"api-monitoring/available-apis",id:"api-monitoring/available-apis",title:"Available APIs",description:"Following DevRaven APIs are available for use in your scripts during execution of API monitoring checks.",source:"@site/docs/api-monitoring/available-apis.md",sourceDirName:"api-monitoring",slug:"/api-monitoring/available-apis",permalink:"/docs/api-monitoring/available-apis",draft:!1,tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"Preserving state values",permalink:"/docs/api-monitoring/preserving-values"},next:{title:"SSL Monitoring",permalink:"/docs/category/ssl-monitoring"}},u={},d=[{value:"Context APIs",id:"context-apis",level:2},{value:"context",id:"context",level:3},{value:"Request APIs",id:"request-apis",level:2},{value:"request.method",id:"requestmethod",level:3},{value:"request.url",id:"requesturl",level:3},{value:"request.body",id:"requestbody",level:3},{value:"request.headers",id:"requestheaders",level:3},{value:"Response APIs",id:"response-apis",level:2},{value:"response.status",id:"responsestatus",level:3},{value:"response.headers",id:"responseheaders",level:3},{value:"response.body",id:"responsebody",level:3},{value:"response.jsonBody",id:"responsejsonbody",level:3},{value:"response.responseTime",id:"responseresponsetime",level:3},{value:"State Persistence APIs",id:"state-persistence-apis",level:2},{value:"persistValue(key, value)",id:"persistvaluekey-value",level:3},{value:"retrieveValue(key)",id:"retrievevaluekey",level:3},{value:"deleteValue(key)",id:"deletevaluekey",level:3}],c={toc:d};function v(e){var t=e.components,n=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"available-apis"},"Available APIs"),(0,s.kt)("p",null,"Following DevRaven APIs are available for use in your scripts during execution of API monitoring checks."),(0,s.kt)("h2",{id:"context-apis"},"Context APIs"),(0,s.kt)("p",null,"Context API allows settings values that stay available throughout the API monitoring check execution. You can use context APIs to set a value in ",(0,s.kt)("strong",{parentName:"p"},"Before Request Script")," and later read the value in ",(0,s.kt)("strong",{parentName:"p"},"After Request Script"),"."),(0,s.kt)("h3",{id:"context"},"context"),(0,s.kt)("p",null,"Allows setting and reading values from Context."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"\n//Before Request script\n//set context variables. txn_id is new context variable being added.\ndevraven.context.txn_id = '1234'\n\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"\n//After Request script\n//read context variables again\nconsole.log(devraven.context.txn_id);\n\n//or assert with context variables\nexpect(devraven.response.jsonBody.id).to.equal(devraven.context.txn_id)\n\n")),(0,s.kt)("h2",{id:"request-apis"},"Request APIs"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"devraven.request")," allows changing request object before the HTTP request is executed during a monitoring run."),(0,s.kt)("h3",{id:"requestmethod"},"request.method"),(0,s.kt)("p",null,"Set/change the HTTP method for the HTTP request in ",(0,s.kt)("strong",{parentName:"p"},"Before Request Script")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"devraven.request.method = 'POST'\n")),(0,s.kt)("h3",{id:"requesturl"},"request.url"),(0,s.kt)("p",null,"Change the URL before the execution of http request in ",(0,s.kt)("strong",{parentName:"p"},"Before Request Script")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"devraven.request.url = 'https://www.devraven.io';\n")),(0,s.kt)("h3",{id:"requestbody"},"request.body"),(0,s.kt)("p",null,"Set/change the current body for the HTTP request in  ",(0,s.kt)("strong",{parentName:"p"},"Before Request Script")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"var payload = {'foo':'bar};\ndevraven.request.body = JSON.stringify(payload);\n")),(0,s.kt)("h3",{id:"requestheaders"},"request.headers"),(0,s.kt)("p",null,"Replace all the headers or set a new header to existing headers in ",(0,s.kt)("strong",{parentName:"p"},"Before Request Script")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"//replaces all existing header values currently available\ndevraven.headers = {\n    'headername':'value'\n}\n\n//set a new header\ndevraven.headers['x-newheadername'] = 'value';\n")),(0,s.kt)("h2",{id:"response-apis"},"Response APIs"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"devraven.response")," allows reading response object after the execution of HTTP request during a API monitoring run."),(0,s.kt)("p",null,"Use this object to create complex assertions in ",(0,s.kt)("strong",{parentName:"p"},"After Request Script"),"."),(0,s.kt)("h3",{id:"responsestatus"},"response.status"),(0,s.kt)("p",null,"Status code of the HTTP request"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"expect(devraven.response.status).to.equal(200);\n")),(0,s.kt)("h3",{id:"responseheaders"},"response.headers"),(0,s.kt)("p",null,"Allows read response header values from the HTTP response."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"console.log(devraven.response.headers['x-powered-by'])\n")),(0,s.kt)("h3",{id:"responsebody"},"response.body"),(0,s.kt)("p",null,"HTTP response body as String."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"console.log(devraven.response.body);\n")),(0,s.kt)("h3",{id:"responsejsonbody"},"response.jsonBody"),(0,s.kt)("p",null,"HTTP response body as a JSON object. An empty object will be returned if the response is not a JSON object type."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"console.log(devraven.response.jsonBody.name);\n\nexpect(devraven.response.jsonBody.id).to.equal(devraven.context.txn_id);\n")),(0,s.kt)("h3",{id:"responseresponsetime"},"response.responseTime"),(0,s.kt)("p",null,"Time taken to execute the HTTP request in milliseconds."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"expect(devraven.response.responseTime).to.be.below(250); //response times less than 250ms\n")),(0,s.kt)("h2",{id:"state-persistence-apis"},"State Persistence APIs"),(0,s.kt)("h3",{id:"persistvaluekey-value"},"persistValue(key, value)"),(0,s.kt)("p",null,"Persists provided value to public ephemeral storage for retrieval later in any dependent tests."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"key")," ",(0,s.kt)("inlineCode",{parentName:"p"},"String")," - Key must be at least 10 characters in length up to 36 characters. We recommend using an UUID as a key."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"value")," ",(0,s.kt)("inlineCode",{parentName:"p"},"String")," - Value must not be blank or null, String type and can be up to 200 characters in length."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"//key must be between 10-36 characters, UUID is recommended\n//value must be less than 200 characters\nawait devraven.persistValue('MY_UNIQUE_KEY_HERE_123', 'value to be persisted');\n")),(0,s.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"danger")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Values persisted are purged at regular hourly intervals. Values stored are not secured and accessible publicly using the key. Do not persist credentials or any sensitive information to this storage."))),(0,s.kt)("h3",{id:"retrievevaluekey"},"retrieveValue(key)"),(0,s.kt)("p",null,"Retrieves a previously persisted value using the provided key."),(0,s.kt)("p",null,"Returns ",(0,s.kt)("inlineCode",{parentName:"p"},"null")," if a value is not set for the provided key."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const value = await devraven.retrieveValue('MY_UNIQUE_KEY_HERE_123')\n")),(0,s.kt)("h3",{id:"deletevaluekey"},"deleteValue(key)"),(0,s.kt)("p",null,"Deletes a previously persisted value from Storage."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"//if not explictly deleted, the value will be purged after ~1 hr interval\nawait devraven.deleteValue('MY_UNIQUE_KEY_HERE_123')\n")))}v.isMDXComponent=!0}}]);